local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create compact main window
local Window = WindUI:CreateWindow({
    Title = "MM2 Script",
    Icon = "skull",
    Author = "NebulaScripts",
    Folder = "MM2Settings",
    Size = UDim2.fromOffset(300, 400),
    Theme = "Dark",
    SideBarWidth = 150
})

-- ESP System
local ESPEnabled = false
local PlayerConnections = {}

local function hasTool(player, toolName)
    if player and player:FindFirstChild("Backpack") and player.Backpack:FindFirstChild(toolName) then
        return true
    end
    if player and player.Character and player.Character:FindFirstChild(toolName) then
        return true
    end
    return false
end

local function updateHighlightForPlayer(player)
    if not ESPEnabled or player == LocalPlayer or not player.Character then return end
    local character = player.Character
    if not character or not character:FindFirstChild("Head") then return end

    -- Remove old elements
    local oldHighlight = character:FindFirstChild("ToolOutline")
    if oldHighlight then oldHighlight:Destroy() end
    local oldBillboard = character:FindFirstChild("RoleNameTag")
    if oldBillboard then oldBillboard:Destroy() end

    -- Create highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "ToolOutline"
    highlight.Adornee = character
    highlight.Parent = character
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

    local roleColor = Color3.fromRGB(0, 255, 0) -- Innocent
    if hasTool(player, "Knife") then
        roleColor = Color3.fromRGB(255, 0, 0) -- Murderer
    elseif hasTool(player, "Gun") then
        roleColor = Color3.fromRGB(0, 0, 255) -- Sheriff
    end

    highlight.FillColor = roleColor
    highlight.OutlineColor = roleColor

    -- Create name tag
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "RoleNameTag"
    billboard.Adornee = character:FindFirstChild("Head")
    billboard.Size = UDim2.new(0, 80, 0, 20) -- Smaller size
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = character

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = player.DisplayName
    textLabel.TextColor3 = roleColor
    textLabel.TextStrokeTransparency = 0.5
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.GothamBold
    textLabel.Parent = billboard
end

local function setupPlayer(player)
    if PlayerConnections[player] then return end
    
    PlayerConnections[player] = {
        player.CharacterAdded:Connect(function(character)
            task.wait(1)
            updateHighlightForPlayer(player)
        end)
    }
    
    if player.Character then
        updateHighlightForPlayer(player)
    end
end

local function clearAllHighlights()
    for _, player in ipairs(Players:GetPlayers()) do
        if player and player.Character then
            local highlight = player.Character:FindFirstChild("ToolOutline")
            if highlight then highlight:Destroy() end
            local billboard = player.Character:FindFirstChild("RoleNameTag")
            if billboard then billboard:Destroy() end
        end
    end
end

local function enableESP()
    ESPEnabled = true
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then setupPlayer(player) end
    end
    Players.PlayerAdded:Connect(setupPlayer)
end

local function disableESP()
    ESPEnabled = false
    for player, connections in pairs(PlayerConnections) do
        for _, connection in pairs(connections) do
            connection:Disconnect()
        end
    end
    PlayerConnections = {}
    clearAllHighlights()
end

-- Create compact tabs
local TradeTab = Window:Tab({ Title = "Trade", Icon = "dollar-sign" })
local AutoFarmTab = Window:Tab({ Title = "AutoFarm", Icon = "zap" })
local GodlyTab = Window:Tab({ Title = "Godly", Icon = "gift" })
local DupeTab = Window:Tab({ Title = "Dupe", Icon = "wand" })
local MiscTab = Window:Tab({ Title = "Misc", Icon = "settings" })

-- Trade Tab
TradeTab:Input({
    Title = "Victim Name",
    Placeholder = "Username",
    Callback = function(name)
        Window:Notify({ Title = "Target", Content = name, Duration = 2 })
    end
})

TradeTab:Button({
    Title = "Freeze Trade",
    Callback = function()
        Window:Notify({ Title = "Frozen", Content = "Trade locked", Duration = 2 })
    end
})

TradeTab:Button({
    Title = "Force Accept",
    Callback = function()
        Window:Notify({ Title = "Forced", Content = "Trade accepted", Duration = 2 })
    end
})

-- AutoFarm Tab
AutoFarmTab:Toggle({
    Title = "Enable ESP",
    Value = false,
    Callback = function(state)
        if state then enableESP() else disableESP() end
        Window:Notify({ Title = "ESP", Content = state and "ON" or "OFF", Duration = 2 })
    end
})

AutoFarmTab:Button({
    Title = "Start AutoFarm",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Au0yX/Community/main/XhubMM2"))()
        Window:Notify({ Title = "AutoFarm", Content = "Started", Duration = 2 })
    end
})

-- Godly Tab
local itemList = {"Harvester", "Gingerscope", "Icepiercer", "VampireGun", "VampireAxe", "TravelerAxe", "WraithKnife", "WatergunChroma"}

GodlyTab:Dropdown({
    Title = "Select Godly",
    Values = itemList,
    Value = itemList[1]
})

local manualInputItem = ""
GodlyTab:Input({
    Title = "Custom Name",
    Placeholder = "Exact item name",
    Callback = function(input)
        manualInputItem = input
    end
})

GodlyTab:Button({
    Title = "SPAWN",
    Callback = function()
        local selectedItem = GodlyTab:GetDropdown("Select Godly").Value
        local itemToSpawn = manualInputItem ~= "" and manualInputItem or selectedItem
        
        if itemToSpawn and itemToSpawn ~= "" then
            ReplicatedStorage.Remotes.Shop.BoxController:Fire("KnifeBox4", itemToSpawn)
            Window:Notify({ Title = "Spawned", Content = itemToSpawn, Duration = 2 })
        else
            Window:Notify({ Title = "Error", Content = "No item", Type = "error", Duration = 2 })
        end
    end
})

-- Quick spawn buttons
GodlyTab:Section({ Title = "Quick Spawn" })
GodlyTab:Button({ Title = "Harvester", Callback = function()
    ReplicatedStorage.Remotes.Shop.BoxController:Fire("KnifeBox4", "Harvester")
    Window:Notify({ Title = "Spawned", Content = "Harvester", Duration = 2 })
end})

GodlyTab:Button({ Title = "Chroma WG", Callback = function()
    ReplicatedStorage.Remotes.Shop.BoxController:Fire("KnifeBox4", "WatergunChroma")
    Window:Notify({ Title = "Spawned", Content = "Chroma WG", Duration = 2 })
end})

-- Dupe Tab
DupeTab:Input({
    Title = "Weapon Name",
    Placeholder = "Exact name",
    Callback = function(text)
        Window:Notify({ Title = "Target", Content = text, Duration = 2 })
    end
})

DupeTab:Button({
    Title = "Duplicate",
    Callback = function()
        Window:Notify({ Title = "Dupe", Content = "Attempting...", Duration = 2 })
    end
})

-- Currency buttons
DupeTab:Section({ Title = "Currency" })
DupeTab:Button({ Title = "+1k Coins", Callback = function()
    Window:Notify({ Title = "Coins", Content = "+1000", Duration = 2 })
end})

DupeTab:Button({ Title = "+500 Gems", Callback = function()
    Window:Notify({ Title = "Gems", Content = "+500", Duration = 2 })
end})

-- Misc Tab
local themes = {}
for name,_ in pairs(WindUI:GetThemes()) do
    table.insert(themes, name)
end

MiscTab:Dropdown({
    Title = "UI Theme",
    Values = themes,
    Value = WindUI:GetCurrentTheme(),
    Callback = function(theme)
        WindUI:SetTheme(theme)
    end
})

MiscTab:Button({
    Title = "Destroy UI",
    Callback = function()
        Window:Destroy()
    end
})

Window:OnClose(function()
    disableESP()
end)

-- Initialize
Window:SelectTab(1)
